[package]
name = "gba"
description = "A crate for 'raw' style GBA development. If you want a 'managed' experience, try the `agb` crate instead."
repository = "https://github.com/rust-console/gba"
version = "0.12.0"
edition = "2021"
license = "Zlib OR Apache-2.0 OR MIT"

[features]
default = ["on_gba", "critical-section", "doc_cfg"]
# SEE THE CRATE DOCS FOR SAFETY RELATED INFO REGARDING THIS FEATURE.
on_gba = []
# utilize `doc_cfg` where appropriate. requires nightly.
doc_cfg = []
track_caller = []

[dependencies]
voladdress = "1.3.0"
bitfrob = "1"
critical-section = { version = "1.1.2", features = [
  "restore-state-bool",
], optional = true }

[profile.dev]
opt-level = 3
incremental = false

[profile.dev.package."*"]
# this prevents `core` from having way too many debug assertions
debug-assertions = false

[profile.release]
codegen-units = 1   # increases build time, but also can increase inline opportunities
incremental = false

[package.metadata.docs.rs]
# When building the crate docs, we want to see the crate "as if" it was running
# on the GBA. This is the closest target that docs.rs supports by default and
# which *also* supports the `instruction_set` attribute to avoid build errors.
targets = ["armv5te-unknown-linux-gnueabi"]
